<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from mur_620.gazebo.xacro           | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="mur620">
  <material name="aluminum">
    <color rgba="0.5 0.5 0.5 1"/>
  </material>
  <material name="plastic">
    <color rgba="0.1 0.1 0.1 1"/>
  </material>
  <ros2_control name="GazeboSimSystem" type="system">
    <hardware>
      <plugin>gz_ros2_control/GazeboSimSystem</plugin>
    </hardware>
    <joint name="left_wheel_joint">
      <command_interface name="velocity">
        <param name="min">-1</param>
        <param name="max">1</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="right_wheel_joint">
      <command_interface name="velocity">
        <param name="min">-1</param>
        <param name="max">1</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
  </ros2_control>
  <!-- <xacro:macro name="mir_robot_ros2_control">

    <ros2_control name="mir" type="system">
      <hardware>
          <plugin>gz_ros2_control/GazeboSimSystem</plugin>
      </hardware>
      <joint name="left_wheel_joint">
        <command_interface name="velocity">
          <param name="min">-1</param>
          <param name="max">1</param>
        </command_interface>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
      </joint>
      <joint name="right_wheel_joint">
        <command_interface name="velocity">
          <param name="min">-1</param>
          <param name="max">1</param>
        </command_interface>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
      </joint>
    </ros2_control>

  </xacro:macro> -->
  <!--
    Base UR robot series xacro macro.

    NOTE this is NOT a URDF. It cannot directly be loaded by consumers
    expecting a flattened '.urdf' file. See the top-level '.xacro' for that
    (but note that .xacro must still be processed by the xacro command).

    This file models the base kinematic chain of a UR robot, which then gets
    parameterised by various configuration files to convert it into a UR3(e),
    UR5(e), UR10(e) or UR16e.

    NOTE the default kinematic parameters (i.e., link lengths, frame locations,
    offsets, etc) do not correspond to any particular robot. They are defaults
    only. There WILL be non-zero offsets between the Forward Kinematics results
    in TF (i.e., robot_state_publisher) and the values reported by the Teach
    Pendant.

    For accurate (and robot-specific) transforms, the 'kinematics_parameters_file'
    parameter MUST point to a .yaml file containing the appropriate values for
    the targeted robot.

    If using the UniversalRobots/Universal_Robots_ROS_Driver, follow the steps
    described in the readme of that repository to extract the kinematic
    calibration from the controller and generate the required .yaml file.

    Main author of the migration to yaml configs Ludovic Delval.

    Contributors to previous versions (in no particular order)

     - Denis Stogl
     - Lovro Ivanov
     - Felix Messmer
     - Kelsey Hawkins
     - Wim Meeussen
     - Shaun Edwards
     - Nadia Hammoudeh Garcia
     - Dave Hershberger
     - G. vd. Hoorn
     - Philip Long
     - Dave Coleman
     - Miguel Prada
     - Mathias Luedtke
     - Marcel Schnirring
     - Felix von Drigalski
     - Felix Exner
     - Jimmy Da Silva
     - Ajit Krisshna N L
     - Muhammad Asif Rana
  -->
  <link name="base_footprint"/>
  <joint name="base_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
  </joint>
  <link name="base_link">
    <inertial>
      <mass value="300.0"/>
      <origin rpy="0 0 0" xyz="0.0 0 0.20"/>
      <inertia ixx="10.659995736" ixy="0.0" ixz="0.0" iyy="22.499991" iyz="0.0" izz="28.659988536000004"/>
    </inertial>
    <visual>
      <origin rpy="1.5707963267948966 0 1.5707963267948966" xyz="0.0 0 0"/>
      <geometry>
        <mesh filename="package://mir_description/meshes/visual/mir_600_base.stl"/>
      </geometry>
      <material name="white">
        <color rgba="1 1 1 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 1.5707963267948966" xyz="0.0 0 0"/>
      <geometry>
        <mesh filename="package://mir_description/meshes/collision/mir_600_base.stl"/>
      </geometry>
    </collision>
  </link>
  <!-- IMU -->
  <joint name="base_link_to_imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin rpy="0 0 0" xyz="0.0 0.0 0.25"/>
    <!-- same as real MiR -->
  </joint>
  <link name="imu_link"/>
  <!-- Create an alias for imu_link. This is necessary because the real MiR's
			TF has imu_link, but the imu_data topic is published in the imu_frame
			frame. -->
  <joint name="imu_link_to_imu_frame_joint" type="fixed">
    <parent link="imu_link"/>
    <child link="imu_frame"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
  </joint>
  <link name="imu_frame"/>
  <!-- Laser scanners -->
  <joint name="base_link_to_front_laser_joint" type="fixed">
    <parent link="base_link"/>
    <child link="front_laser_link"/>
    <origin rpy="0.0 0.0 0.7853981633974483" xyz="0.58985 0.370 0.1914"/>
    <!-- from visually matching up the meshes of the MiR and the laser scanner -->
  </joint>
  <link name="front_laser_link">
    <visual>
      <origin rpy="3.141592653589793 0 0" xyz="0.0 0.0 0.0"/>
      <geometry>
        <mesh filename="package://mir_description/meshes/visual/sick_lms-100.stl"/>
      </geometry>
      <!-- <xacro:insert_block name="material_yellow" /> -->
      <material name="black">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="3.141592653589793 0 0" xyz="0.0 0.0 0.0"/>
      <geometry>
        <mesh filename="package://mir_description/meshes/visual/sick_lms-100.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="2.0"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.009708329449999999" ixy="0.0" ixz="0.0" iyy="0.0097601627626" iyz="0.0" izz="0.0080601634426"/>
    </inertial>
  </link>
  <joint name="base_link_to_back_laser_joint" type="fixed">
    <parent link="base_link"/>
    <child link="back_laser_link"/>
    <origin rpy="0.0 0.0 -2.356194490192345" xyz="-0.58985 -0.370 0.1914"/>
    <!-- from visually matching up the meshes of the MiR and the laser scanner -->
  </joint>
  <link name="back_laser_link">
    <visual>
      <origin rpy="3.141592653589793 0 0" xyz="0.0 0.0 0.0"/>
      <geometry>
        <mesh filename="package://mir_description/meshes/visual/sick_lms-100.stl"/>
      </geometry>
      <!-- <xacro:insert_block name="material_yellow" /> -->
      <material name="black">
        <color rgba="0.1 0.1 0.1 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="3.141592653589793 0 0" xyz="0.0 0.0 0.0"/>
      <geometry>
        <mesh filename="package://mir_description/meshes/visual/sick_lms-100.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="2.0"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.009708329449999999" ixy="0.0" ixz="0.0" iyy="0.0097601627626" iyz="0.0" izz="0.0080601634426"/>
    </inertial>
  </link>
  <!-- Ultrasound sensors -->
  <joint name="us_1_joint" type="fixed">
    <!-- right ultrasound -->
    <parent link="base_link"/>
    <child link="us_1_frame"/>
    <origin rpy="0 0 0" xyz="0.45 -0.12 0.16 "/>
    <!-- from visually matching to the mesh of the MiR -->
  </joint>
  <link name="us_1_frame"/>
  <joint name="us_2_joint" type="fixed">
    <!-- left ultrasound -->
    <parent link="base_link"/>
    <child link="us_2_frame"/>
    <origin rpy="0 0 0" xyz="0.45 0.12 0.16 "/>
    <!-- from visually matching to the mesh of the MiR -->
  </joint>
  <link name="us_2_frame"/>
  <joint name="left_wheel_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.0 0.33 0.1"/>
    <parent link="base_link"/>
    <child link="left_wheel_link"/>
    <axis xyz="0 1 0"/>
    <limit effort="200" velocity="20.0"/>
  </joint>
  <link name="left_wheel_link">
    <inertial>
      <mass value="10.0"/>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <inertia ixx="0.027083322500000007" ixy="0.0" ixz="0.0" iyy="0.027083322500000007" iyz="0.0" izz="0.05"/>
    </inertial>
    <visual>
      <origin rpy="1.5707963267948966 0 0.0" xyz="0 -0.025 0"/>
      <geometry>
        <mesh filename="package://mir_description/meshes/visual/mir_600_wheel.stl"/>
      </geometry>
      <material name="dark_grey">
        <color rgba="0.3 0.3 0.3 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 -3.141592653589793" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.1"/>
      </geometry>
    </collision>
  </link>
  <joint name="right_wheel_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.0 -0.33 0.1"/>
    <parent link="base_link"/>
    <child link="right_wheel_link"/>
    <axis xyz="0 1 0"/>
    <limit effort="200" velocity="20.0"/>
  </joint>
  <link name="right_wheel_link">
    <inertial>
      <mass value="10.0"/>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <inertia ixx="0.027083322500000007" ixy="0.0" ixz="0.0" iyy="0.027083322500000007" iyz="0.0" izz="0.05"/>
    </inertial>
    <visual>
      <origin rpy="1.5707963267948966 0 3.141592653589793" xyz="0 0.025 0"/>
      <geometry>
        <mesh filename="package://mir_description/meshes/visual/mir_600_wheel.stl"/>
      </geometry>
      <material name="dark_grey">
        <color rgba="0.3 0.3 0.3 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 -3.141592653589793" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.1"/>
      </geometry>
    </collision>
  </link>
    <!-- camera body, with origin at bottom screw mount -->
  <joint name="camera_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.62335 0 0.24"/>
    <parent link="base_link"/>
    <child link="camera_bottom_screw_frame"/>
  </joint>
  <link name="camera_bottom_screw_frame"/>
  <joint name="camera_link_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.010600000000000002 0.0175 0.0125"/>
    <parent link="camera_bottom_screw_frame"/>
    <child link="camera_link"/>
  </joint>
  <link name="camera_link">
    <visual>
      <!-- the mesh origin is at front plate in between the two infrared camera axes -->
      <origin rpy="1.5707963267948966 0 1.5707963267948966" xyz="0.0043 -0.0175 0"/>
      <geometry>
        <mesh filename="package://mir_description/meshes/visual/d435.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 -0.0175 0"/>
      <geometry>
        <box size="0.02505 0.09 0.025"/>
      </geometry>
    </collision>
    <inertial>
      <!-- The following are not reliable values, and should not be used for modeling -->
      <mass value="0.072"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.003881243" ixy="0.0" ixz="0.0" iyy="0.000498940" iyz="0.0" izz="0.003879257"/>
    </inertial>
  </link>
  <!-- camera depth joints and links -->
  <joint name="camera_depth_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="camera_link"/>
    <child link="camera_depth_frame"/>
  </joint>
  <link name="camera_depth_frame"/>
  <joint name="camera_depth_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="camera_depth_frame"/>
    <child link="camera_depth_optical_frame"/>
  </joint>
  <link name="camera_depth_optical_frame"/>
  <!-- camera left IR joints and links -->
  <joint name="camera_infra1_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0.0 0"/>
    <parent link="camera_link"/>
    <child link="camera_infra1_frame"/>
  </joint>
  <link name="camera_infra1_frame"/>
  <joint name="camera_infra1_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="camera_infra1_frame"/>
    <child link="camera_infra1_optical_frame"/>
  </joint>
  <link name="camera_infra1_optical_frame"/>
  <!-- camera right IR joints and links -->
  <joint name="camera_infra2_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 -0.05 0"/>
    <parent link="camera_link"/>
    <child link="camera_infra2_frame"/>
  </joint>
  <link name="camera_infra2_frame"/>
  <joint name="camera_infra2_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="camera_infra2_frame"/>
    <child link="camera_infra2_optical_frame"/>
  </joint>
  <link name="camera_infra2_optical_frame"/>
  <!-- camera color joints and links -->
  <joint name="camera_color_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0.015 0"/>
    <parent link="camera_link"/>
    <child link="camera_color_frame"/>
  </joint>
  <link name="camera_color_frame"/>
  <joint name="camera_color_optical_joint" type="fixed">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="camera_color_frame"/>
    <child link="camera_color_optical_frame"/>
  </joint>
  <link name="camera_color_optical_frame"/>
  <!-- <xacro:if value="${add_plug}">
      <xacro:usb_plug parent="${name}_link" name="${name}_usb_plug">
        <origin xyz="${d435_cam_mount_from_center_offset - 0.02095} ${-d435_cam_depth_py - 0.0353} 0" rpy="0 0 0"/>
      </xacro:usb_plug>
    </xacro:if> -->
  <!-- Insert a match logo on both sides of the mobile robot -->
  <!-- <xacro:match_logo parent="base_link" locationprefix="left" location_dx="${mir_600_match_logo_dx}" location_dy="${mir_600_match_logo_dy}" location_dz="${mir_600_match_logo_dz}"/>
		<xacro:match_logo parent="base_link" locationprefix="right" location_dx="${mir_600_match_logo_dx}" location_dy="${-1 * mir_600_match_logo_dy}" location_dz="${mir_600_match_logo_dz}" orientation="${pi}"/> -->
  <!-- top module -->
  <link name="top_module">
    <inertial>
      <mass value="100.0"/>
      <origin rpy="0 0 0" xyz="0.0 0 0.25"/>
      <inertia ixx="8.984163073000001" ixy="0.0" ixz="0.0" iyy="17.270826425000003" iyz="0.0" izz="22.088324498000002"/>
    </inertial>
    <visual>
      <origin rpy="0 0 -1.5707963267948966" xyz="0.0 0 0"/>
      <geometry>
        <mesh filename="package://mir_description/meshes/visual/mir_600_top_module.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="white">
        <color rgba="1 1 1 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="0 0 -1.5707963267948966" xyz="0.0 0 0"/>
      <geometry>
        <mesh filename="package://mir_description/meshes/collision/mir_600_top_module.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="top_module">
    <material>
      <ambient>0.5 0.5 0.5 1.0</ambient>
      <!-- Adjust as needed -->
      <diffuse>0.5 0.5 0.5 1.0</diffuse>
      <specular>0.1 0.1 0.1 1.0</specular>
      <emissive>0 0 0 1</emissive>
    </material>
  </gazebo>
  <joint name="top_module_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.832"/>
    <parent link="base_link"/>
    <child link="top_module"/>
    <axis xyz="0 0 1"/>
  </joint>
  <link name="left_lift_bottom">
    <inertial>
      <mass value="30.0"/>
      <origin rpy="0 0 0" xyz="0 0 0.15"/>
      <inertia ixx="0.32499986999999997" ixy="0.0" ixz="0.0" iyy="0.32499986999999997" iyz="0.0" izz="0.19999992000000003"/>
    </inertial>
    <visual>
      <origin rpy="1.5707963267948966 0 0.0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://mir_description/meshes/visual/mir_600_lift_bot.stl"/>
      </geometry>
      <material name="white">
        <color rgba="1 1 1 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0.0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://mir_description/meshes/collision/mir_600_lift_bot.stl"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="left_lift_bottom">
    <material>
      <ambient>0.3 0.3 0.3 1.0</ambient>
      <!-- Dark grey -->
      <diffuse>0.3 0.3 0.3 1.0</diffuse>
      <specular>0.1 0.1 0.1 1.0</specular>
      <emissive>0 0 0 1</emissive>
    </material>
  </gazebo>
  <joint name="left_lift_bottom_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.549 0.318 -0.49"/>
    <parent link="top_module"/>
    <child link="left_lift_bottom"/>
    <axis xyz="0 0 1"/>
  </joint>
  <link name="right_lift_bottom">
    <inertial>
      <mass value="30.0"/>
      <origin rpy="0 0 0" xyz="0 0 0.15"/>
      <inertia ixx="0.32499986999999997" ixy="0.0" ixz="0.0" iyy="0.32499986999999997" iyz="0.0" izz="0.19999992000000003"/>
    </inertial>
    <visual>
      <origin rpy="1.5707963267948966 0 0.0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://mir_description/meshes/visual/mir_600_lift_bot.stl"/>
      </geometry>
      <material name="white">
        <color rgba="1 1 1 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0.0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://mir_description/meshes/collision/mir_600_lift_bot.stl"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="right_lift_bottom">
    <material>
      <ambient>0.3 0.3 0.3 1.0</ambient>
      <!-- Dark grey -->
      <diffuse>0.3 0.3 0.3 1.0</diffuse>
      <specular>0.1 0.1 0.1 1.0</specular>
      <emissive>0 0 0 1</emissive>
    </material>
  </gazebo>
  <joint name="right_lift_bottom_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.549 -0.318 -0.49"/>
    <parent link="top_module"/>
    <child link="right_lift_bottom"/>
    <axis xyz="0 0 1"/>
  </joint>
  <!-- Camera -->
  <!--link name="camera_link">
		<collision>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<geometry>
				<box size="0.1 0.1 0.1"/>
			</geometry>
		</collision>
		<visual>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<geometry>
				<mesh filename="package://mir_description/meshes/visual/realsense.dae" />
			</geometry>
		</visual>
		<inertial>
			<mass value="1e-5" />
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
		</inertial>
		</link>

		<joint name="camera_joint" type="fixed">
			<axis xyz="0 1 0" />
			<origin xyz="0.42 0 0.27" rpy="0 0.2 0"/-->
  <!--set the position of the realsense-->
  <!--parent link="${tf_prefix}base_link"/>
			<child link="camera_link"/>
		</joint-->
  <!-- generate an optical frame http://www.ros.org/reps/rep-0103.html#suffix-frames
			so that ros and opencv can operate on the camera frame correctly -->
  <!--joint name="camera_optical_joint" type="fixed"-->
  <!-- these values have to be these values otherwise the gazebo camera image
				won't be aligned properly with the frame it is supposedly originating from -->
  <!--origin xyz="0 0 0" rpy="-1.5708 0 -1.5708"/>
			<parent link="camera_link"/>
			<child link="camera_link_optical"/>
		</joint>

		<link name="camera_link_optical"-->
  <!--/link-->
  <!-- Set Gazebo material for the base -->
  <gazebo reference="base_link">
    <material>
      <ambient>0.5 0.5 0.5 1.0</ambient>
      <!-- Adjust as needed -->
      <diffuse>0.5 0.5 0.5 1.0</diffuse>
      <specular>0.1 0.1 0.1 1.0</specular>
      <emissive>0 0 0 1</emissive>
    </material>
  </gazebo>
  <gazebo reference="left_wheel_link">
    <material>
      <ambient>0.3 0.3 0.3 1.0</ambient>
      <!-- Dark grey -->
      <diffuse>0.3 0.3 0.3 1.0</diffuse>
      <specular>0.1 0.1 0.1 1.0</specular>
      <emissive>0 0 0 1</emissive>
    </material>
  </gazebo>
  <gazebo reference="right_wheel_link">
    <material>
      <ambient>0.3 0.3 0.3 1.0</ambient>
      <!-- Dark grey -->
      <diffuse>0.3 0.3 0.3 1.0</diffuse>
      <specular>0.1 0.1 0.1 1.0</specular>
      <emissive>0 0 0 1</emissive>
    </material>
  </gazebo>
  <transmission name="left_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_wheel_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="left_wheel_motor">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="right_wheel_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_wheel_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="right_wheel_motor">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <gazebo reference="imu_link">
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <!-- this is not the publish rate -->
      <visualize>true</visualize>
      <topic>__default_topic__</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <robotNamespace>/</robotNamespace>
        <topicName>imu_data</topicName>
        <bodyName>imu_link</bodyName>
        <updateRateHZ>50.0</updateRateHZ>
        <!-- this is the publish rate -->
        <gaussianNoise>2.8900000000000004e-08</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>UR10_l//imu_frame</frameName>
        <!-- from real MiR -->
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>
  <!-- LiDAR Sensor Configuration for ROS 2 -->
  <gazebo reference="front_laser_link">
    <sensor name="front_laser_link" type="gpu_lidar">
      <gz_frame_id>front_laser_link</gz_frame_id>
      <!-- Use the provided link for frame ID -->
      <topic>f_scan</topic>
      <!-- Use the provided topic for the scan -->
      <update_rate>12.5</update_rate>
      <!-- Retained the original update rate -->
      <lidar>
        <scan>
          <horizontal>
            <samples>541</samples>
            <!-- Retained the original sample count -->
            <resolution>1</resolution>
            <!-- Retained the original resolution -->
            <min_angle>-2.35619449615</min_angle>
            <!-- Same min angle as in the original -->
            <max_angle>2.35619449615</max_angle>
            <!-- Same max angle as in the original -->
          </horizontal>
          <vertical>
            <samples>1</samples>
            <!-- Single vertical sample (no vertical scan in the original) -->
            <resolution>0.1</resolution>
            <!-- Set a small resolution for vertical scan -->
            <min_angle>0.0</min_angle>
            <!-- No vertical range in original -->
            <max_angle>0.0</max_angle>
            <!-- No vertical range in original -->
          </vertical>
        </scan>
        <range>
          <min>0.05</min>
          <!-- Retained the original min range -->
          <max>29.0</max>
          <!-- Retained the original max range -->
          <resolution>0.01</resolution>
        </range>
        <frame_id>mur620/front_laser_link</frame_id>
        <!-- Use tf_prefix and link for frame ID -->
      </lidar>
      <alwaysOn>true</alwaysOn>
      <visualize>false</visualize>
      <!-- Retained visualize as false -->
    </sensor>
  </gazebo>
  <!-- LiDAR Sensor Configuration for ROS 2 -->
  <gazebo reference="back_laser_link">
    <sensor name="back_laser_link" type="gpu_lidar">
      <gz_frame_id>back_laser_link</gz_frame_id>
      <!-- Use the provided link for frame ID -->
      <topic>b_scan</topic>
      <!-- Use the provided topic for the scan -->
      <update_rate>12.5</update_rate>
      <!-- Retained the original update rate -->
      <lidar>
        <scan>
          <horizontal>
            <samples>541</samples>
            <!-- Retained the original sample count -->
            <resolution>1</resolution>
            <!-- Retained the original resolution -->
            <min_angle>-2.35619449615</min_angle>
            <!-- Same min angle as in the original -->
            <max_angle>2.35619449615</max_angle>
            <!-- Same max angle as in the original -->
          </horizontal>
          <vertical>
            <samples>1</samples>
            <!-- Single vertical sample (no vertical scan in the original) -->
            <resolution>0.1</resolution>
            <!-- Set a small resolution for vertical scan -->
            <min_angle>0.0</min_angle>
            <!-- No vertical range in original -->
            <max_angle>0.0</max_angle>
            <!-- No vertical range in original -->
          </vertical>
        </scan>
        <range>
          <min>0.05</min>
          <!-- Retained the original min range -->
          <max>29.0</max>
          <!-- Retained the original max range -->
          <resolution>0.01</resolution>
        </range>
        <frame_id>mur620/back_laser_link</frame_id>
        <!-- Use tf_prefix and link for frame ID -->
      </lidar>
      <alwaysOn>true</alwaysOn>
      <visualize>false</visualize>
      <!-- Retained visualize as false -->
    </sensor>
  </gazebo>
  <gazebo reference="camera_link">
    <self_collide>0</self_collide>
    <enable_wind>0</enable_wind>
    <kinematic>0</kinematic>
    <gravity>1</gravity>
    <!--<mu>1</mu>-->
    <mu2>1</mu2>
    <fdir1>0 0 0</fdir1>
    <!--<slip1>0</slip1>
      <slip2>0</slip2>-->
    <kp>1e+13</kp>
    <kd>1</kd>
    <!--<max_vel>0.01</max_vel>
      <min_depth>0</min_depth>-->
    <sensor name="cameracolor" type="camera">
      <camera name="camera">
        <horizontal_fov>1.2112585008840648</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>RGB_INT8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>30</update_rate>
      <visualize>1</visualize>
    </sensor>
    <sensor name="cameraired1" type="camera">
      <camera name="camera">
        <horizontal_fov>1.4870205226991688</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>L_INT8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.05</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>90</update_rate>
      <visualize>0</visualize>
    </sensor>
    <sensor name="cameraired2" type="camera">
      <camera name="camera">
        <horizontal_fov>1.4870205226991688</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>L_INT8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.05</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>90</update_rate>
      <visualize>0</visualize>
    </sensor>
    <sensor name="cameradepth" type="depth">
      <camera name="camera">
        <horizontal_fov>1.4870205226991688</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.100</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <update_rate>90</update_rate>
      <visualize>0</visualize>
    </sensor>
  </gazebo>
  <!-- tf_prefix is necessary for the configuration of the plugin as it looks like the plugin doesnt use the robot_state_publishers tf_prefix-->
  <!-- <gazebo>
      <plugin name="${topics_ns}" filename="librealsense_gazebo_plugin.so">
        <prefix>${camera_name}</prefix>
        <depthUpdateRate>30.0</depthUpdateRate>
        <colorUpdateRate>30.0</colorUpdateRate>
        <infraredUpdateRate>30.0</infraredUpdateRate>
        <depthTopicName>depth/image_raw</depthTopicName>
        <depthCameraInfoTopicName>depth/camera_info</depthCameraInfoTopicName>
        <colorTopicName>color/image_raw</colorTopicName>
        <colorCameraInfoTopicName>color/camera_info</colorCameraInfoTopicName>
        <infrared1TopicName>infra1/image_raw</infrared1TopicName>
        <infrared1CameraInfoTopicName>infra1/camera_info</infrared1CameraInfoTopicName>
        <infrared2TopicName>infra2/image_raw</infrared2TopicName>
        <infrared2CameraInfoTopicName>infra2/camera_info</infrared2CameraInfoTopicName>
        <colorOpticalframeName>${color_optical_frame}</colorOpticalframeName>
        <depthOpticalframeName>${depth_optical_frame}</depthOpticalframeName>
        <infrared1OpticalframeName>${infrared1_optical_frame}</infrared1OpticalframeName>
        <infrared2OpticalframeName>${infrared2_optical_frame}</infrared2OpticalframeName>
        <rangeMinDepth>0.2</rangeMinDepth>
        <rangeMaxDepth>10.0</rangeMaxDepth>
        <pointCloud>${publish_pointcloud}</pointCloud>
        <pointCloudTopicName>depth/color/points</pointCloudTopicName>
        <pointCloudCutoff>0.25</pointCloudCutoff>
        <pointCloudCutoffMax>9.0</pointCloudCutoffMax>
      </plugin>
    </gazebo> -->
  <!-- disabled, because it doesn't make a difference in Gazebo: -->
  <!-- <xacro:set_all_wheel_frictions tf_prefix="${tf_prefix}"/> -->
  <!-- This part of the file looks like it is not necessary for the correct function of the urdf files.-->
  <!-- Remove this part in a second iteration when all functions are working like they are supposed to be-->
  <!-- <xacro:macro name="diff_controller_plugin_gazebo" params="prefix left_wheel_joint right_wheel_joint wheel_separation wheel_radius">
			<gazebo>
			<plugin name="diff_drive_controller" filename="libgazebo_ros_diff_drive.so">
				<legacyMode>false</legacyMode>
				<alwaysOn>true</alwaysOn>
				<updateRate>1000.0</updateRate>
				<leftJoint>${left_wheel_joint}</leftJoint>
				<rightJoint>${right_wheel_joint}</rightJoint>
				<wheelSeparation>${wheel_separation}</wheelSeparation>
				<wheelDiameter>${2*wheel_radius}</wheelDiameter>
				<wheelTorque>10</wheelTorque>
				<publishTf>1</publishTf>
				<odometryFrame>map</odometryFrame>
				<commandTopic>mobile_base_controller/cmd_vel</commandTopic>
				<odometryTopic>mobile_base_controller/odom</odometryTopic>
				<robotBaseFrame>base_footprint</robotBaseFrame>
				<wheelAcceleration>2.8</wheelAcceleration>
				<publishWheelJointState>true</publishWheelJointState>
				<publishWheelTF>false</publishWheelTF>
				<odometrySource>world</odometrySource>
				<rosDebugLevel>Debug</rosDebugLevel>
			</plugin>
			</gazebo>
		</xacro:macro> -->
  <!-- <xacro:macro name="set_wheel_friction" params="link friction">
			<gazebo reference="${link}">
			<mu1 value="${friction}"/>
			<mu2 value="${friction}"/>
			<kp value="10000000.0"/>
			<kd value="1.0"/>
			</gazebo>
		</xacro:macro>

		<xacro:macro name="set_all_wheel_frictions" params="prefix">
			<xacro:set_wheel_friction link="${prefix}left_wheel_link" friction="200"/>
			<xacro:set_wheel_friction link="${prefix}right_wheel_link" friction="200"/>
			<xacro:set_wheel_friction link="${prefix}fl_caster_wheel_link" friction="1"/>
			<xacro:set_wheel_friction link="${prefix}fr_caster_wheel_link" friction="1"/>
			<xacro:set_wheel_friction link="${prefix}bl_caster_wheel_link" friction="1"/>
			<xacro:set_wheel_friction link="${prefix}br_caster_wheel_link" friction="1"/>
		</xacro:macro> -->
  <!-- <p3d_base_controller tf_prefix="${tf_prefix}" /> -->
  <!-- Settings for the camera of the robot to work in the simulation environment-->
  <!--gazebo reference="camera_link">  
			<sensor type="depth" name="camera">
			<plugin name="kinect_camera_controller" filename="libgazebo_ros_openni_kinect.so">
				<cameraName>camera</cameraName>
				<alwaysOn>true</alwaysOn>
				<updateRate>10</updateRate>
				<imageTopicName>rgb/image_raw</imageTopicName>
				<depthImageTopicName>depth/image_raw</depthImageTopicName>
				<pointCloudTopicName>depth/points</pointCloudTopicName>
				<cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
				<depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
				<frameName>camera_link_optical</frameName>
				<baseline>0.1</baseline>
				<distortion_k1>0.0</distortion_k1>
				<distortion_k2>0.0</distortion_k2>
				<distortion_k3>0.0</distortion_k3>
				<distortion_t1>0.0</distortion_t1>
				<distortion_t2>0.0</distortion_t2>
				<pointCloudCutoff>0.4</pointCloudCutoff>
			</plugin>
			</sensor>
		</gazebo-->
  <gazebo>
    <plugin filename="libgz_ros2_control-system.so" name="gz_ros2_control::GazeboSimROS2ControlPlugin">
      <parameters>/home/rosmatch/colcon_ws/install/mir_description/share/mir_description/config/mur_controllers.yaml</parameters>
      <ros>
        <controlPeriod>0.001</controlPeriod>
        <legacyModeNS>true</legacyModeNS>
      </ros>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin filename="libgazebo_ros_p3d.so" name="p3d_base_controller">
      <robotNamespace></robotNamespace>
      <alwaysOn>true</alwaysOn>
      <updateRate>50.0</updateRate>
      <bodyName>base_footprint</bodyName>
      <topicName>ground_truth</topicName>
      <gaussianNoise>0.01</gaussianNoise>
      <frameName>map</frameName>
      <xyzOffsets>0 0 0</xyzOffsets>
      <rpyOffsets>0 0 0</rpyOffsets>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin filename="gz-sim-sensors-system" name="gz::sim::systems::Sensors">
      <render_engine>ogre2</render_engine>
    </plugin>
  </gazebo>
  <ros2_control name="mir" type="system">
    <hardware>
      <plugin>gz_ros2_control/GazeboSimSystem</plugin>
    </hardware>
    <!-- <joint name="left_wheel_joint">
        <command_interface name="velocity">
          <param name="min">-1</param>
          <param name="max">1</param>
        </command_interface>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
      </joint>
      <joint name="right_wheel_joint">
        <command_interface name="velocity">
          <param name="min">-1</param>
          <param name="max">1</param>
        </command_interface>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
      </joint> -->
    <joint name="right_lift_joint">
      <command_interface name="position">
        <param name="min">0</param>
        <param name="max">1</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
    </joint>
    <joint name="left_lift_joint">
      <command_interface name="position">
        <param name="min">0</param>
        <param name="max">1</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
    </joint>
  </ros2_control>
  <!-- links -  main serial chain -->
  <link name="UR10_l/base_link"/>
  <link name="UR10_l/base_link_inertia">
    <visual>
      <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///opt/ros/jazzy/share/ur_description/meshes/ur10e/visual/base.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///opt/ros/jazzy/share/ur_description/meshes/ur10e/collision/base.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="4.0"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0061063308908" ixy="0.0" ixz="0.0" iyy="0.0061063308908" iyz="0.0" izz="0.01125"/>
    </inertial>
  </link>
  <link name="UR10_l/shoulder_link">
    <visual>
      <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///opt/ros/jazzy/share/ur_description/meshes/ur10e/visual/shoulder.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///opt/ros/jazzy/share/ur_description/meshes/ur10e/collision/shoulder.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="7.369"/>
      <origin rpy="1.570796326794897 0 0" xyz="0.021 -0.027 0.0"/>
      <inertia ixx="0.03408" ixy="2e-05" ixz="-0.00425" iyy="0.03529" iyz="8e-05" izz="0.02156"/>
    </inertial>
  </link>
  <link name="UR10_l/upper_arm_link">
    <visual>
      <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.1762"/>
      <geometry>
        <mesh filename="file:///opt/ros/jazzy/share/ur_description/meshes/ur10e/visual/upperarm.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.1762"/>
      <geometry>
        <mesh filename="file:///opt/ros/jazzy/share/ur_description/meshes/ur10e/collision/upperarm.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="13.051"/>
      <origin rpy="0 0 0" xyz="-0.2327 0.0 0.158"/>
      <inertia ixx="0.02814" ixy="5e-05" ixz="-0.01561" iyy="0.77068" iyz="2e-05" izz="0.76943"/>
    </inertial>
  </link>
  <link name="UR10_l/forearm_link">
    <visual>
      <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.0393"/>
      <geometry>
        <mesh filename="file:///opt/ros/jazzy/share/ur_description/meshes/ur10e/visual/forearm.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.0393"/>
      <geometry>
        <mesh filename="file:///opt/ros/jazzy/share/ur_description/meshes/ur10e/collision/forearm.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="3.989"/>
      <origin rpy="0 0 0" xyz="-0.33155 0.0 0.068"/>
      <inertia ixx="0.01014" ixy="8e-05" ixz="0.00916" iyy="0.30928" iyz="0.0" izz="0.30646"/>
    </inertial>
  </link>
  <link name="UR10_l/wrist_1_link">
    <visual>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.135"/>
      <geometry>
        <mesh filename="file:///opt/ros/jazzy/share/ur_description/meshes/ur10e/visual/wrist1.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.135"/>
      <geometry>
        <mesh filename="file:///opt/ros/jazzy/share/ur_description/meshes/ur10e/collision/wrist1.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="2.1"/>
      <origin rpy="1.570796326794897 0 0" xyz="0.0 -0.018 0.007"/>
      <inertia ixx="0.00296" ixy="-1e-05" ixz="0.0" iyy="0.00222" iyz="-0.00024" izz="0.00258"/>
    </inertial>
  </link>
  <link name="UR10_l/wrist_2_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 -0.12"/>
      <geometry>
        <mesh filename="file:///opt/ros/jazzy/share/ur_description/meshes/ur10e/visual/wrist2.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 -0.12"/>
      <geometry>
        <mesh filename="file:///opt/ros/jazzy/share/ur_description/meshes/ur10e/collision/wrist2.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1.98"/>
      <origin rpy="-1.570796326794897 0 0" xyz="0.0 0.018 -0.007"/>
      <inertia ixx="0.00296" ixy="-1e-05" ixz="0.0" iyy="0.00222" iyz="-0.00024" izz="0.00258"/>
    </inertial>
  </link>
  <link name="UR10_l/wrist_3_link">
    <visual>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.1168"/>
      <geometry>
        <mesh filename="file:///opt/ros/jazzy/share/ur_description/meshes/ur10e/visual/wrist3.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.1168"/>
      <geometry>
        <mesh filename="file:///opt/ros/jazzy/share/ur_description/meshes/ur10e/collision/wrist3.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.615"/>
      <origin rpy="0 0 0" xyz="0.0 0.0 -0.026"/>
      <inertia ixx="0.0004" ixy="0.0" ixz="0.0" iyy="0.00041" iyz="0.0" izz="0.00034"/>
    </inertial>
  </link>
  <!-- base_joint fixes base_link to the environment -->
  <joint name="UR10_l/base_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="UR10_l/base_ideal"/>
    <child link="UR10_l/base_link"/>
  </joint>
  <!-- joints - main serial chain -->
  <joint name="UR10_l/base_link-base_link_inertia" type="fixed">
    <parent link="UR10_l/base_link"/>
    <child link="UR10_l/base_link_inertia"/>
    <!-- 'base_link' is REP-103 aligned (so X+ forward), while the internal
           frames of the robot/controller have X+ pointing backwards.
           Use the joint between 'base_link' and 'base_link_inertia' (a dummy
           link/frame) to introduce the necessary rotation over Z (of pi rad).
      -->
    <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
  </joint>
  <joint name="UR10_l/shoulder_pan_joint" type="revolute">
    <parent link="UR10_l/base_link_inertia"/>
    <child link="UR10_l/shoulder_link"/>
    <origin rpy="0 0 0" xyz="0 0 0.1807"/>
    <axis xyz="0 0 1"/>
    <limit effort="330.0" lower="-3.14159265359" upper="3.14159265359" velocity="2.09439510239"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <joint name="UR10_l/shoulder_lift_joint" type="revolute">
    <parent link="UR10_l/shoulder_link"/>
    <child link="UR10_l/upper_arm_link"/>
    <origin rpy="1.570796327 0 0" xyz="0 0 0"/>
    <axis xyz="0 0 1"/>
    <limit effort="330.0" lower="-3.14159265359" upper="3.14159265359" velocity="2.09439510239"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <joint name="UR10_l/elbow_joint" type="revolute">
    <parent link="UR10_l/upper_arm_link"/>
    <child link="UR10_l/forearm_link"/>
    <origin rpy="0 0 0" xyz="-0.6127 0 0"/>
    <axis xyz="0 0 1"/>
    <limit effort="150.0" lower="-1.57079632679" upper="1.57079632679" velocity="1.57079632679"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <joint name="UR10_l/wrist_1_joint" type="revolute">
    <parent link="UR10_l/forearm_link"/>
    <child link="UR10_l/wrist_1_link"/>
    <origin rpy="0 0 0" xyz="-0.57155 0 0.17415"/>
    <axis xyz="0 0 1"/>
    <limit effort="54.0" lower="-3.14159265359" upper="3.14159265359" velocity="1.57079632679"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <joint name="UR10_l/wrist_2_joint" type="revolute">
    <parent link="UR10_l/wrist_1_link"/>
    <child link="UR10_l/wrist_2_link"/>
    <origin rpy="1.570796327 0 0" xyz="0 -0.11985 -2.458164590756244e-11"/>
    <axis xyz="0 0 1"/>
    <limit effort="54.0" lower="-3.14159265359" upper="3.14159265359" velocity="1.57079632679"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <joint name="UR10_l/wrist_3_joint" type="revolute">
    <parent link="UR10_l/wrist_2_link"/>
    <child link="UR10_l/wrist_3_link"/>
    <origin rpy="1.570796326589793 3.141592653589793 3.141592653589793" xyz="0 0.11655 -2.390480459346185e-11"/>
    <axis xyz="0 0 1"/>
    <limit effort="54.0" lower="-3.14159265359" upper="3.14159265359" velocity="1.57079632679"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <link name="UR10_l/ft_frame"/>
  <joint name="UR10_l/wrist_3_link-ft_frame" type="fixed">
    <parent link="UR10_l/wrist_3_link"/>
    <child link="UR10_l/ft_frame"/>
    <origin rpy="3.141592653589793 0 0" xyz="0 0 0"/>
  </joint>
  <!-- ROS-Industrial 'base' frame - base_link to UR 'Base' Coordinates transform -->
  <link name="UR10_l/base"/>
  <joint name="UR10_l/base_link-base_fixed_joint" type="fixed">
    <!-- Note the rotation over Z of pi radians - as base_link is REP-103
           aligned (i.e., has X+ forward, Y+ left and Z+ up), this is needed
           to correctly align 'base' with the 'Base' coordinate system of
           the UR controller.
      -->
    <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
    <parent link="UR10_l/base_link"/>
    <child link="UR10_l/base"/>
  </joint>
  <!-- ROS-Industrial 'flange' frame - attachment point for EEF models -->
  <link name="UR10_l/flange"/>
  <joint name="UR10_l/wrist_3-flange" type="fixed">
    <parent link="UR10_l/wrist_3_link"/>
    <child link="UR10_l/flange"/>
    <origin rpy="0 -1.5707963267948966 -1.5707963267948966" xyz="0 0 0"/>
  </joint>
  <!-- ROS-Industrial 'tool0' frame - all-zeros tool frame -->
  <link name="UR10_l/tool0"/>
  <joint name="UR10_l/flange-tool0" type="fixed">
    <!-- default toolframe - X+ left, Y+ up, Z+ front -->
    <origin rpy="1.5707963267948966 0 1.5707963267948966" xyz="0 0 0"/>
    <parent link="UR10_l/flange"/>
    <child link="UR10_l/tool0"/>
  </joint>
  <!-- links -  main serial chain -->
  <link name="UR10_r/base_link"/>
  <link name="UR10_r/base_link_inertia">
    <visual>
      <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///opt/ros/jazzy/share/ur_description/meshes/ur10e/visual/base.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///opt/ros/jazzy/share/ur_description/meshes/ur10e/collision/base.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="4.0"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0061063308908" ixy="0.0" ixz="0.0" iyy="0.0061063308908" iyz="0.0" izz="0.01125"/>
    </inertial>
  </link>
  <link name="UR10_r/shoulder_link">
    <visual>
      <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///opt/ros/jazzy/share/ur_description/meshes/ur10e/visual/shoulder.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///opt/ros/jazzy/share/ur_description/meshes/ur10e/collision/shoulder.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="7.369"/>
      <origin rpy="1.570796326794897 0 0" xyz="0.021 -0.027 0.0"/>
      <inertia ixx="0.03408" ixy="2e-05" ixz="-0.00425" iyy="0.03529" iyz="8e-05" izz="0.02156"/>
    </inertial>
  </link>
  <link name="UR10_r/upper_arm_link">
    <visual>
      <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.1762"/>
      <geometry>
        <mesh filename="file:///opt/ros/jazzy/share/ur_description/meshes/ur10e/visual/upperarm.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.1762"/>
      <geometry>
        <mesh filename="file:///opt/ros/jazzy/share/ur_description/meshes/ur10e/collision/upperarm.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="13.051"/>
      <origin rpy="0 0 0" xyz="-0.2327 0.0 0.158"/>
      <inertia ixx="0.02814" ixy="5e-05" ixz="-0.01561" iyy="0.77068" iyz="2e-05" izz="0.76943"/>
    </inertial>
  </link>
  <link name="UR10_r/forearm_link">
    <visual>
      <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.0393"/>
      <geometry>
        <mesh filename="file:///opt/ros/jazzy/share/ur_description/meshes/ur10e/visual/forearm.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.0393"/>
      <geometry>
        <mesh filename="file:///opt/ros/jazzy/share/ur_description/meshes/ur10e/collision/forearm.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="3.989"/>
      <origin rpy="0 0 0" xyz="-0.33155 0.0 0.068"/>
      <inertia ixx="0.01014" ixy="8e-05" ixz="0.00916" iyy="0.30928" iyz="0.0" izz="0.30646"/>
    </inertial>
  </link>
  <link name="UR10_r/wrist_1_link">
    <visual>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.135"/>
      <geometry>
        <mesh filename="file:///opt/ros/jazzy/share/ur_description/meshes/ur10e/visual/wrist1.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.135"/>
      <geometry>
        <mesh filename="file:///opt/ros/jazzy/share/ur_description/meshes/ur10e/collision/wrist1.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="2.1"/>
      <origin rpy="1.570796326794897 0 0" xyz="0.0 -0.018 0.007"/>
      <inertia ixx="0.00296" ixy="-1e-05" ixz="0.0" iyy="0.00222" iyz="-0.00024" izz="0.00258"/>
    </inertial>
  </link>
  <link name="UR10_r/wrist_2_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 -0.12"/>
      <geometry>
        <mesh filename="file:///opt/ros/jazzy/share/ur_description/meshes/ur10e/visual/wrist2.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 -0.12"/>
      <geometry>
        <mesh filename="file:///opt/ros/jazzy/share/ur_description/meshes/ur10e/collision/wrist2.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1.98"/>
      <origin rpy="-1.570796326794897 0 0" xyz="0.0 0.018 -0.007"/>
      <inertia ixx="0.00296" ixy="-1e-05" ixz="0.0" iyy="0.00222" iyz="-0.00024" izz="0.00258"/>
    </inertial>
  </link>
  <link name="UR10_r/wrist_3_link">
    <visual>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.1168"/>
      <geometry>
        <mesh filename="file:///opt/ros/jazzy/share/ur_description/meshes/ur10e/visual/wrist3.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.1168"/>
      <geometry>
        <mesh filename="file:///opt/ros/jazzy/share/ur_description/meshes/ur10e/collision/wrist3.stl"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.615"/>
      <origin rpy="0 0 0" xyz="0.0 0.0 -0.026"/>
      <inertia ixx="0.0004" ixy="0.0" ixz="0.0" iyy="0.00041" iyz="0.0" izz="0.00034"/>
    </inertial>
  </link>
  <!-- base_joint fixes base_link to the environment -->
  <joint name="UR10_r/base_joint" type="fixed">
    <origin rpy="0 0 3.14159265359" xyz="0 0 0"/>
    <parent link="UR10_r/base_ideal"/>
    <child link="UR10_r/base_link"/>
  </joint>
  <!-- joints - main serial chain -->
  <joint name="UR10_r/base_link-base_link_inertia" type="fixed">
    <parent link="UR10_r/base_link"/>
    <child link="UR10_r/base_link_inertia"/>
    <!-- 'base_link' is REP-103 aligned (so X+ forward), while the internal
           frames of the robot/controller have X+ pointing backwards.
           Use the joint between 'base_link' and 'base_link_inertia' (a dummy
           link/frame) to introduce the necessary rotation over Z (of pi rad).
      -->
    <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
  </joint>
  <joint name="UR10_r/shoulder_pan_joint" type="revolute">
    <parent link="UR10_r/base_link_inertia"/>
    <child link="UR10_r/shoulder_link"/>
    <origin rpy="0 0 0" xyz="0 0 0.1807"/>
    <axis xyz="0 0 1"/>
    <limit effort="330.0" lower="-3.14159265359" upper="3.14159265359" velocity="2.09439510239"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <joint name="UR10_r/shoulder_lift_joint" type="revolute">
    <parent link="UR10_r/shoulder_link"/>
    <child link="UR10_r/upper_arm_link"/>
    <origin rpy="1.570796327 0 0" xyz="0 0 0"/>
    <axis xyz="0 0 1"/>
    <limit effort="330.0" lower="-3.14159265359" upper="3.14159265359" velocity="2.09439510239"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <joint name="UR10_r/elbow_joint" type="revolute">
    <parent link="UR10_r/upper_arm_link"/>
    <child link="UR10_r/forearm_link"/>
    <origin rpy="0 0 0" xyz="-0.6127 0 0"/>
    <axis xyz="0 0 1"/>
    <limit effort="150.0" lower="-1.57079632679" upper="1.57079632679" velocity="1.57079632679"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <joint name="UR10_r/wrist_1_joint" type="revolute">
    <parent link="UR10_r/forearm_link"/>
    <child link="UR10_r/wrist_1_link"/>
    <origin rpy="0 0 0" xyz="-0.57155 0 0.17415"/>
    <axis xyz="0 0 1"/>
    <limit effort="54.0" lower="-3.14159265359" upper="3.14159265359" velocity="1.57079632679"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <joint name="UR10_r/wrist_2_joint" type="revolute">
    <parent link="UR10_r/wrist_1_link"/>
    <child link="UR10_r/wrist_2_link"/>
    <origin rpy="1.570796327 0 0" xyz="0 -0.11985 -2.458164590756244e-11"/>
    <axis xyz="0 0 1"/>
    <limit effort="54.0" lower="-3.14159265359" upper="3.14159265359" velocity="1.57079632679"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <joint name="UR10_r/wrist_3_joint" type="revolute">
    <parent link="UR10_r/wrist_2_link"/>
    <child link="UR10_r/wrist_3_link"/>
    <origin rpy="1.570796326589793 3.141592653589793 3.141592653589793" xyz="0 0.11655 -2.390480459346185e-11"/>
    <axis xyz="0 0 1"/>
    <limit effort="54.0" lower="-3.14159265359" upper="3.14159265359" velocity="1.57079632679"/>
    <dynamics damping="0" friction="0"/>
  </joint>
  <link name="UR10_r/ft_frame"/>
  <joint name="UR10_r/wrist_3_link-ft_frame" type="fixed">
    <parent link="UR10_r/wrist_3_link"/>
    <child link="UR10_r/ft_frame"/>
    <origin rpy="3.141592653589793 0 0" xyz="0 0 0"/>
  </joint>
  <!-- ROS-Industrial 'base' frame - base_link to UR 'Base' Coordinates transform -->
  <link name="UR10_r/base"/>
  <joint name="UR10_r/base_link-base_fixed_joint" type="fixed">
    <!-- Note the rotation over Z of pi radians - as base_link is REP-103
           aligned (i.e., has X+ forward, Y+ left and Z+ up), this is needed
           to correctly align 'base' with the 'Base' coordinate system of
           the UR controller.
      -->
    <origin rpy="0 0 3.141592653589793" xyz="0 0 0"/>
    <parent link="UR10_r/base_link"/>
    <child link="UR10_r/base"/>
  </joint>
  <!-- ROS-Industrial 'flange' frame - attachment point for EEF models -->
  <link name="UR10_r/flange"/>
  <joint name="UR10_r/wrist_3-flange" type="fixed">
    <parent link="UR10_r/wrist_3_link"/>
    <child link="UR10_r/flange"/>
    <origin rpy="0 -1.5707963267948966 -1.5707963267948966" xyz="0 0 0"/>
  </joint>
  <!-- ROS-Industrial 'tool0' frame - all-zeros tool frame -->
  <link name="UR10_r/tool0"/>
  <joint name="UR10_r/flange-tool0" type="fixed">
    <!-- default toolframe - X+ left, Y+ up, Z+ front -->
    <origin rpy="1.5707963267948966 0 1.5707963267948966" xyz="0 0 0"/>
    <parent link="UR10_r/flange"/>
    <child link="UR10_r/tool0"/>
  </joint>
  <!-- Add URDF transmission elements (for ros_control) -->
  <!--<xacro:ur_arm_transmission prefix="${prefix}" hw_interface="${transmission_hw_interface}" />-->
  <!-- Placeholder for ros2_control transmission which don't yet exist -->
  <ros2_control name="UR10_l" type="system">
    <hardware>
      <plugin>gz_ros2_control/GazeboSimSystem</plugin>
    </hardware>
    <joint name="UR10_l/shoulder_pan_joint">
      <command_interface name="position"/>
      <command_interface name="velocity"/>
      <state_interface name="position">
        <!-- initial position for the mock system and simulation -->
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="velocity">
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="effort">
        <param name="initial_value">0.0</param>
      </state_interface>
    </joint>
    <joint name="UR10_l/shoulder_lift_joint">
      <command_interface name="position"/>
      <command_interface name="velocity"/>
      <state_interface name="position">
        <!-- initial position for the mock system and simulation -->
        <param name="initial_value">-1.57</param>
      </state_interface>
      <state_interface name="velocity">
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="effort">
        <param name="initial_value">0.0</param>
      </state_interface>
    </joint>
    <joint name="UR10_l/elbow_joint">
      <command_interface name="position"/>
      <command_interface name="velocity"/>
      <state_interface name="position">
        <!-- initial position for the mock system and simulation -->
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="velocity">
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="effort">
        <param name="initial_value">0.0</param>
      </state_interface>
    </joint>
    <joint name="UR10_l/wrist_1_joint">
      <command_interface name="position"/>
      <command_interface name="velocity"/>
      <state_interface name="position">
        <!-- initial position for the mock system and simulation -->
        <param name="initial_value">-1.57</param>
      </state_interface>
      <state_interface name="velocity">
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="effort">
        <param name="initial_value">0.0</param>
      </state_interface>
    </joint>
    <joint name="UR10_l/wrist_2_joint">
      <command_interface name="position"/>
      <command_interface name="velocity"/>
      <state_interface name="position">
        <!-- initial position for the mock system and simulation -->
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="velocity">
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="effort">
        <param name="initial_value">0.0</param>
      </state_interface>
    </joint>
    <joint name="UR10_l/wrist_3_joint">
      <command_interface name="position"/>
      <command_interface name="velocity"/>
      <state_interface name="position">
        <!-- initial position for the mock system and simulation -->
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="velocity">
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="effort">
        <param name="initial_value">0.0</param>
      </state_interface>
    </joint>
  </ros2_control>
  <!-- Add URDF transmission elements (for ros_control) -->
  <!--<xacro:ur_arm_transmission prefix="${prefix}" hw_interface="${transmission_hw_interface}" />-->
  <!-- Placeholder for ros2_control transmission which don't yet exist -->
  <ros2_control name="UR10_r" type="system">
    <hardware>
      <plugin>gz_ros2_control/GazeboSimSystem</plugin>
    </hardware>
    <joint name="UR10_r/shoulder_pan_joint">
      <command_interface name="position"/>
      <command_interface name="velocity"/>
      <state_interface name="position">
        <!-- initial position for the mock system and simulation -->
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="velocity">
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="effort">
        <param name="initial_value">0.0</param>
      </state_interface>
    </joint>
    <joint name="UR10_r/shoulder_lift_joint">
      <command_interface name="position"/>
      <command_interface name="velocity"/>
      <state_interface name="position">
        <!-- initial position for the mock system and simulation -->
        <param name="initial_value">-1.57</param>
      </state_interface>
      <state_interface name="velocity">
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="effort">
        <param name="initial_value">0.0</param>
      </state_interface>
    </joint>
    <joint name="UR10_r/elbow_joint">
      <command_interface name="position"/>
      <command_interface name="velocity"/>
      <state_interface name="position">
        <!-- initial position for the mock system and simulation -->
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="velocity">
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="effort">
        <param name="initial_value">0.0</param>
      </state_interface>
    </joint>
    <joint name="UR10_r/wrist_1_joint">
      <command_interface name="position"/>
      <command_interface name="velocity"/>
      <state_interface name="position">
        <!-- initial position for the mock system and simulation -->
        <param name="initial_value">-1.57</param>
      </state_interface>
      <state_interface name="velocity">
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="effort">
        <param name="initial_value">0.0</param>
      </state_interface>
    </joint>
    <joint name="UR10_r/wrist_2_joint">
      <command_interface name="position"/>
      <command_interface name="velocity"/>
      <state_interface name="position">
        <!-- initial position for the mock system and simulation -->
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="velocity">
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="effort">
        <param name="initial_value">0.0</param>
      </state_interface>
    </joint>
    <joint name="UR10_r/wrist_3_joint">
      <command_interface name="position"/>
      <command_interface name="velocity"/>
      <state_interface name="position">
        <!-- initial position for the mock system and simulation -->
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="velocity">
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="effort">
        <param name="initial_value">0.0</param>
      </state_interface>
    </joint>
  </ros2_control>
  <!-- virtual link rotated to show in same direction like mir  -->
  <link name="UR10_l/base_ideal"/>
  <link name="UR10_r/base_ideal"/>
  <link name="left_lift_top">
    <inertial>
      <mass value="1.0"/>
      <origin rpy="0 0 0" xyz="0 0 0.15"/>
      <inertia ixx="0.010833329000000001" ixy="0.0" ixz="0.0" iyy="0.010833329000000001" iyz="0.0" izz="0.006666664000000001"/>
    </inertial>
    <visual>
      <origin rpy="1.5707963267948966 0 0.0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://mir_description/meshes/visual/mir_600_lift_top.stl"/>
      </geometry>
      <material name="white">
        <color rgba="1 1 1 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0.0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://mir_description/meshes/collision/mir_600_lift_top.stl"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="left_lift_top">
    <material>
      <ambient>0.5 0.5 0.5 1.0</ambient>
      <!-- Adjust as needed -->
      <diffuse>0.5 0.5 0.5 1.0</diffuse>
      <specular>0.1 0.1 0.1 1.0</specular>
      <emissive>0 0 0 1</emissive>
    </material>
  </gazebo>
  <!-- for some reason prismatic joint dont work, so we use a continuous joint - this is a workaround and should be fixed -->
  <joint name="left_lift_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.0 0.0 0.0"/>
    <parent link="left_lift_bottom"/>
    <child link="left_lift_top"/>
    <dynamics damping="1.0" friction="1.0"/>
    <limit effort="1000000" lower="-0.01" upper="1.0" velocity="1.0"/>
    <axis xyz="0 1 0"/>
    <gazebo>
      <plugin filename="gz_ros2_control-system" name="gz_ros2_control::GazeboSimROS2ControlPlugin"/>
      <hardwareInterface>PositionJointInterface</hardwareInterface>
      <!-- or Effort/Velocity -->
    </gazebo>
  </joint>
  <link name="right_lift_top">
    <inertial>
      <mass value="1.0"/>
      <origin rpy="0 0 0" xyz="0 0 0.15"/>
      <inertia ixx="0.010833329000000001" ixy="0.0" ixz="0.0" iyy="0.010833329000000001" iyz="0.0" izz="0.006666664000000001"/>
    </inertial>
    <visual>
      <origin rpy="1.5707963267948966 0 0.0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://mir_description/meshes/visual/mir_600_lift_top.stl"/>
      </geometry>
      <material name="white">
        <color rgba="1 1 1 1"/>
      </material>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0.0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://mir_description/meshes/collision/mir_600_lift_top.stl"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="right_lift_top">
    <material>
      <ambient>0.5 0.5 0.5 1.0</ambient>
      <!-- Adjust as needed -->
      <diffuse>0.5 0.5 0.5 1.0</diffuse>
      <specular>0.1 0.1 0.1 1.0</specular>
      <emissive>0 0 0 1</emissive>
    </material>
  </gazebo>
  <joint name="right_lift_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.0 0.0 0.0"/>
    <parent link="right_lift_bottom"/>
    <child link="right_lift_top"/>
    <dynamics damping="1.0" friction="1.0"/>
    <limit effort="1000000" lower="-0.01" upper="0.5" velocity="1.0"/>
    <axis xyz="0 0 1"/>
    <gazebo>
      <plugin filename="gz_ros2_control-system" name="gz_ros2_control::GazeboSimROS2ControlPlugin"/>
      <hardwareInterface>PositionJointInterface</hardwareInterface>
      <!-- or Effort/Velocity -->
    </gazebo>
  </joint>
  <transmission name="left_lift_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_lift_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="left_lift_joint_motor">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="right_lift_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_lift_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="right_lift_joint_motor">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <joint name="plattform_manipulator_joint_l" type="fixed">
    <parent link="left_lift_top"/>
    <child link="UR10_l/base_ideal"/>
    <origin rpy="0 0 0" xyz="0.0 0.0 0.555"/>
  </joint>
  <joint name="plattform_manipulator_joint_r" type="fixed">
    <parent link="right_lift_top"/>
    <child link="UR10_r/base_ideal"/>
    <origin rpy="0 0 0" xyz="0.0 0.0 0.555"/>
  </joint>
  <!-- Because one arm is mounted backwards. TODO: use calibrated pose -->
  <!-- <joint name="plattform_ur_calibration_joint_l" type="fixed">
			<parent link="UR10_l/base_ideal" />
			<child link="UR10_l/base_link" />
			<origin xyz="${ur_l_xyz}" rpy="${ur_l_rpy}" /> 
	</joint> -->
  <!-- <joint name="plattform_ur_calibration_joint_r" type="fixed">
			<parent link="UR10_r/base_ideal" />
			<child link="UR10_r/base_link" />
			<origin xyz="${ur_r_xyz}" rpy="${ur_r_rpy}" /> 
	</joint> -->
  <!-- <xacro:mir_robot_gazebo/> -->
  <!-- <xacro:sick_s300_gazebo link="front_laser_link" robot_namespace="" topic="scan" tf_prefix=""/> -->
  <!-- <xacro:mir_robot_gazebo/> -->
</robot>
